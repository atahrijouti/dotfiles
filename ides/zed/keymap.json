[
  {
    "bindings": {
      "ctrl-f12": "terminal_panel::ToggleFocus",
      "ctrl-f11": ["task::Spawn", { "task_name": "Windows Terminal" }],
      "ctrl-shift-r": ["task::Spawn", { "task_name": "Run project" }],
      "alt-9": ["task::Spawn", { "task_name": "Open lazygit" }],
      "super-9": ["task::Spawn", { "task_name": "Open lazygit" }],
      "alt-1": "project_panel::ToggleFocus",
      "super-1": "project_panel::ToggleFocus",
      "alt-super-h": "workspace::ActivatePaneLeft",
      "alt-super-shift-h": "vim::ResizePaneLeft",
      "alt-super-j": "workspace::ActivatePaneDown",
      "alt-super-shift-j": "vim::ResizePaneDown",
      "alt-super-k": "workspace::ActivatePaneUp",
      "alt-super-shift-k": "vim::ResizePaneUp",
      "alt-super-l": "workspace::ActivatePaneRight",
      "alt-super-shift-l": "vim::ResizePaneRight",
      "alt-w": "pane::CloseActiveItem"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "alt-1": "workspace::ToggleLeftDock",
      "super-1": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "alt-s": "search::ToggleSelection",
      "alt-r": "search::ToggleRegex"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-v": "editor::Paste"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "g r": "editor::FindAllReferences",
      "g _": "outline::Toggle",
      "d": "vim::DeleteRight",
      "z c": "editor::Fold",
      "z o": "editor::UnfoldLines",
      "space r": "editor::Rename",
      "space k": "editor::Hover",
      "space a": "editor::ToggleCodeActions",
      "shift-c": "editor::AddSelectionBelow",
      ",": "editor::Cancel"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "d": "vim::VisualDelete",
      ",": "vim::SwitchToNormalMode"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore",
      "j j": "vim::NormalBefore"
    }
  },
  {
    "context": "vim_mode == insert || vim_mode == normal",
    "bindings": {
      "alt-p": "editor::ShowSignatureHelp"
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "alt-o": "editor::SelectLargerSyntaxNode",
      "alt-i": "editor::SelectSmallerSyntaxNode",
      "c": "vim::Substitute",
      "%": "editor::SelectAll",
      "U": "editor::Redo",
      "x": "editor::SelectLine",
      "g e": "vim::EndOfDocument",
      "g l": "vim::EndOfLine",
      "g s": "vim::FirstNonWhitespace",
      "g h": "vim::StartOfLine",
      "space R": "editor::Paste",
      "space w": "workspace::Save",
      "space f": "file_finder::Toggle"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-j": ["terminal::SendKeystroke", "ctrl-j"],
      "ctrl-n": ["terminal::SendKeystroke", "ctrl-n"],
      "ctrl-p": ["terminal::SendKeystroke", "ctrl-p"]
    }
  },
  {
    "context": "vim_mode == helix_normal && !menu",
    "bindings": {
      // Changes
      "r": "vim::PushReplace",
      "shift-r": "vim::Paste",
      "~": "vim::ChangeCase",
      "`": "vim::ConvertToLowerCase",
      "alt-`": "vim::ConvertToUpperCase",
      "i": "vim::InsertBefore",
      "a": "vim::InsertAfter",
      "shift-i": "vim::InsertFirstNonWhitespace",
      "shift-a": "vim::InsertEndOfLine",
      "o": "vim::InsertLineBelow",
      "shift-o": "vim::InsertLineAbove",
      "u": "vim::Undo",
      "shift-u": "vim::Redo",
      "p": "vim::Paste",
      "shift-p": ["vim::Paste", { "before": true }],
      "\"": "vim::PushRegister",
      ">": "vim::Indent",
      "<": "vim::Outdent",
      "=": "vim::AutoIndent",
      "d": "vim::HelixDelete",
      "alt-d": ["workspace::SendKeystrokes", "\" _ d"],
      "c": "vim::Substitute",
      "alt-c": ["workspace::SendKeystrokes", "\" _ c"],

      //
      "escape": "editor::Cancel",
      "ctrl-[": "editor::Cancel",
      ":": "command_palette::Toggle",
      "shift-d": "vim::DeleteToEndOfLine",
      "shift-j": "vim::JoinLines",
      "y": "editor::Copy",
      "shift-y": "vim::YankLine",
      "ctrl-a": "vim::Increment",
      "ctrl-x": "vim::Decrement",
      "s": "vim::Substitute",
      "shift-s": "vim::SubstituteLine",
      "g u": "vim::PushLowercase",
      "g shift-u": "vim::PushUppercase",
      "g ~": "vim::PushOppositeCase",
      "g q": "vim::PushRewrap",
      "g w": "vim::PushRewrap",
      "ctrl-pagedown": "pane::ActivateNextItem",
      "ctrl-pageup": "pane::ActivatePreviousItem",
      "insert": "vim::InsertBefore",
      // tree-sitter related commands
      "[ x": "editor::SelectLargerSyntaxNode",
      "] x": "editor::SelectSmallerSyntaxNode",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPreviousDiagnostic",
      "] c": "editor::GoToHunk",
      "[ c": "editor::GoToPreviousHunk",
      // Goto mode
      "g n": "pane::ActivateNextItem",
      "g p": "pane::ActivatePreviousItem",
      // "tab": "pane::ActivateNextItem",
      // "shift-tab": "pane::ActivatePrevItem",
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      "g l": "vim::EndOfLine",
      "g h": "vim::StartOfLine",
      "g s": "vim::FirstNonWhitespace", // "g s" default behavior is "space s"
      "g e": "vim::EndOfDocument",
      "g y": "editor::GoToTypeDefinition",
      "g r": "editor::FindAllReferences", // zed specific
      "g t": "vim::WindowTop",
      "g c": "vim::WindowMiddle",
      "g b": "vim::WindowBottom",

      "x": "editor::SelectLine",
      "shift-x": "editor::SelectLine",
      // Window mode
      "space w h": "workspace::ActivatePaneLeft",
      "space w l": "workspace::ActivatePaneRight",
      "space w k": "workspace::ActivatePaneUp",
      "space w j": "workspace::ActivatePaneDown",
      "space w q": "pane::CloseActiveItem",
      "space w s": "pane::SplitRight",
      "space w r": "pane::SplitRight",
      "space w v": "pane::SplitDown",
      "space w d": "pane::SplitDown",
      // Space mode
      "space f": "file_finder::Toggle",
      "space k": "editor::Hover",
      "space s": "outline::Toggle",
      "space shift-s": "project_symbols::Toggle",
      "space d": "editor::GoToDiagnostic",
      "space r": "editor::Rename",
      "space a": "editor::ToggleCodeActions",
      "space h": "editor::SelectAllMatches",
      "space c": "editor::ToggleComments",
      "space y": "editor::Copy",
      "space p": "editor::Paste",
      // Match mode
      "m m": "vim::Matching",
      "m i w": ["workspace::SendKeystrokes", "v i w"],
      "ctrl-c": "editor::ToggleComments",
      "shift-c": "editor::AddSelectionBelow"
    }
  }
]
